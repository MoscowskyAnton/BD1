<launch>
    <arg name="robot" default="bd1"/>
    <arg name="servo_control" default="VEL"/>
    
    <node name="universal_gazebo_environment_inteface" pkg="bd1_gazebo_env_interface" type="universal_gazebo_environment_inteface.py" output="screen" required="true">
        <param name="servo_control" value="$(arg servo_control)"/>
        <param name="max_servo_vel" value="2"/>
        <param name="max_servo_eff" value="30"/>
    </node>
    
    <node name="universal_sb3_trainer" pkg="bd1_train_sb3" type="universal_stable_baselines3_trainer.py" output="screen" required="true">
        <param name="algorithm" value="SAC"/>
        <param name="verbose" value="1"/>
        <param name="task_name" value="standup_and_balance"/>
    
        <param name="model_dir" value="$(find bd1_train_sb3)/models"/>
        <!--<param name="load_path" value="$(find bd1_train_sb3)/models/standup/sac/fully_trained"/>-->
        <param name="env_interface_node_name" value="universal_gazebo_environment_inteface"/>
        <rosparam param="state">["base_pose", "base_rot_quat", "base_twist_lin", "left_leg_all_quats", "feet_contacts"]</rosparam>
        <rosparam param="actions">["sync_legs_vel"]</rosparam>
        <param name="reward" value="stup_reward_z_pitch_min_actions_2"/>
        
        <param name="total_timesteps" value="50000"/>
        
        
        <param name="n_steps" value="256"/>
        <rosparam param="policy_kwargs">{net_arch: [400, 300]}</rosparam>
        <!--<param name="" value=""/>-->
    </node>
</launch>
